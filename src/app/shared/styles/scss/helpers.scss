.app-row {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;

  &.app-row--center {
    align-items: center;
  }

  &.app-row--end {
    align-items: flex-end;
  }

  &.app-row--x-center {
    justify-content: center;
  }

  &.app-row--x-end {
    justify-content: flex-end;
  }
}

.app-symbol {
  display: inline-block;
  flex-shrink: 0;
  position: relative;
  border-radius: 0.42rem;

  &.app-symbol--default {
    background-color: #eee;
  }

  .app-symbol__label {
    @extend .app-row;
    @extend .app-row--center;
    @extend .app-row--x-center;
  }
}

.app-row__fill {
  flex: 1;
}

.text-overflow-ellipsis {
  text-overflow: ellipsis;
  white-space: nowrap;
  width: auto;
  overflow: hidden;
}

// Mixins
@mixin bemEl($element) {
  &__#{$element} {
    @content;
  }
}

@mixin bemMod($modifier) {
  &--#{$modifier} {
    @content;
  }
}

@function theme-var($key, $fallback: null, $map: $theme-map-light) {
  @if not map-has-key($map, $key) {
    @error "key: '#{$key}', is not a key in map: #{$map}";
  }
  @if ($fallback) {
    @return var($key, $fallback);
  } @else {
    @return var($key);
  }
}

@mixin spread-map($map: ()) {
  @each $key, $value in $map {
    #{$key}: $value;
  }
}

@function theme-var($key, $fallback: null, $map: $theme-map-light) {
  @if not map-has-key($map, $key) {
    @error "key: '#{$key}', is not a key in map: #{$map}";
  }
  @if ($fallback) {
    @return var($key, $fallback);
  } @else {
    @return var($key);
  }
}
